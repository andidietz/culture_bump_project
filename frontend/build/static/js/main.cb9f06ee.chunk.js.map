{"version":3,"sources":["context/UserConext.js","nav/PrivateRoute.js","api/api.js","components/Loading.js","directory/Add.js","directory/Universal.js","directory/Subcategory.js","directory/Category.js","directory/List.js","cards/ReferencePoint.js","directory/Details.js","components/StepTips.js","cards/Tip.js","steps/Add.js","profiles/Update.js","cards/Bump.js","profiles/Profile.js","auth/Login.js","auth/Signup.js","home/Home.js","nav/Routes.js","nav/Nav.js","hooks/useLocalStorage.js","App.js","serviceWorker.js","index.js"],"names":["UserContext","React","createContext","PrivateRoute","_ref","exact","path","children","useContext","currentUser","react_default","a","createElement","react_router","to","CultureBumpApi","endpoint","data","method","url","process","headers","Authorization","concat","token","params","axios","message","_context","t0","response","error","massage","Array","isArray","username","password","requestData","this","request","res","user","tags","referencePoints","tag","bump","id","console","log","referencePoint","categories","subcategories","categoryId","subcategoryId","headerValues","Loading","DirectoryAdd","history","useHistory","useParams","_useState","useState","_useState2","Object","slicedToArray","isHidden","setIsHidden","_useState3","_useState4","titleComponents","setTitleComponents","_useState5","_useState6","setReferencePoint","_useState7","headerSituation","headerSpecification","userTags","_useState8","setHeaderValues","_useState9","headerSituationAdverb","category","subcategory","_useState10","formData","setFormData","useEffect","_getPageInfo","asyncToGenerator","regenerator_default","mark","_callee","wrap","prev","next","getBasicReferencePointInfoById","sent","getHeaderValues","length","alert","push","stop","apply","arguments","getPageInfo","handleSubmit","_callee2","event","formatedHeaderSituation","_context2","preventDefault","header_situation_id","header_specification_id","header_tag_id","category_id","subcategory_id","addToDirectory","_x","components_Loading","universal","action","qualities","Container","Row","Card","Title","Body","Form","onSubmit","Group","Label","Col","name","placeholder","onChange","_event$target","target","value","objectSpread","defineProperty","disabled","selected","esm","dataKey","textField","filter","hideEmptyPopup","autoSelectMatches","param","onSelect","Button","onClick","header_situation","header_specification","type","Universal","react_router_dom","Subcategory","setHeaders","isDisplayed","setIsDisplayed","getHeaders","_ref2","Accordion","flush","Item","eventKey","Header","map","_ref3","headerspecification","headersituation","directory_Universal","Category","setSubcategories","_getAllSubcategories","getSubcategories","getAllSubcategories","displaySubcategories","accordionComponents","categoryid","subcategoryid","directory_Subcategory","DirectoryList","setCategories","_getCategories","getCategories","fluid","className","directory_Category","ReferencePoint","Subtitle","DirectoryDetails","_getDetails","getSpecificReferencePointInfoById","getDetails","user_id","src_cards_ReferencePoint","userId","Step1Tips","Fragment","Step2Tips","Step3Tips","Step4Tips","Step5Tips","Step6Tips","Step7Tips","Tips","Tip","variant","StepsAddForm","formErrors","setFormErrors","isSubmitted","setIsSubmitted","spark","thought","observation","emotions","connectionPoint","_submitToServer","referencePointData","keys","addReferencePoint","submitToServer","validate","values","errors","i","handleChange","cards_Tip","StepTips_Step1Tips","Select","aria-label","Control","Text","StepTips_Step2Tips","StepTips_Step3Tips","StepTips_Step4Tips","StepTips_Step5Tips","StepTips_Step6Tips","StepTips_Step7Tips","ProfileUpdate","_useContext","setUserTags","allTags","setAllTags","tagsToCompare","email","matchingPassword","_getUserInfo","_allTags","_userTags","getTags","getUserTags","tagInfo","toUpperCase","getUserInfo","_getUpdatedUserTags","_userTags2","getUpdatedUserTags","_callee3","userData","_username","_context3","updateProfile","result","test","validateTags","_callee4","_context4","addTag","_callee5","isDuplicate","tagToAdd","tagData","_username2","_context5","toConsumableArray","_x2","style","width","Badge","size","bg","Combobox","Bump","sparker","connection_point","Profile","userReferencePoints","setUserReferencePoints","_userReferencePoints","getUserReferencePoints","deleteReferencePoint","cards_Bump","createUserReferencePoints","Login","login","sucess","Signup","signup","Home","directory_List","Routes","home_Home","auth_Login","auth_Signup","nav_PrivateRoute","src_profiles_Profile","foo","profiles_Update","Add","Details","src_steps_Add","Navigation","logout","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","activeKey","Link","useLocalStorage","key","undefined","startingValue","localStorage","getItem","item","setItem","removeItem","TOKEN_IN_STORAGE","App","infoLoaded","setInfoLoaded","setCurrentUser","_useLocalStorage","_useLocalStorage2","setToken","_login","loginData","_token","abrupt","success","err","_signup","signupData","_token2","_getCurrentUser","_jwt$decode","_currentUser","jwt","decode","getCurrentUser","UserConext","Provider","nav_Nav","nav_Routes","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cb9f06ee.chunk.js","sourcesContent":["import React from 'react'\n\nconst UserContext = React.createContext()\n\nexport default UserContext","import React, {useContext} from 'react'\nimport {Redirect, Route} from 'react-router-dom'\nimport UserContext from '../context/UserConext'\n\nconst PrivateRoute = ({exact, path, children}) => {\n  const {currentUser} = useContext(UserContext)\n  if (!currentUser) {\n    return <Redirect to='/users/login'/>\n  }\n\n  return (\n    <Route exact={exact} path={path}>\n      {children}\n    </Route>\n  )\n}\n\nexport default PrivateRoute","import axios from 'axios'\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\"\n\nclass CultureBumpApi {\n  static token;\n\n  static async request(endpoint, data={}, method=\"get\") {\n    const url = `${BASE_URL}/${endpoint}`\n    const headers = {Authorization: `Bearer ${CultureBumpApi.token}`}\n    const params = (method === 'get') ? data : {}\n\n    try {\n      return (await axios({url, method, data, params, headers})).data\n    } catch (err) {\n      const message = err.response.data.error.massage\n      throw Array.isArray(message) ? message : [message]\n    }\n  }\n\n\n  // Auth Requests\n\n  static async login(data) {\n    const {username, password} = data\n    const requestData = {\n      username, password\n    }\n    const res = await this.request(`users/token`, requestData, 'post')\n    return res.token\n  }\n\n  static async signup(data) {\n    const res = await this.request(`users/register`, data, 'post')\n    return res.token\n  }\n\n\n  // User Requests\n\n  static async getCurrentUser(username) {\n    const res = await this.request(`users/${username}`)\n    return res.user\n  } \n\n  static async getUserTags(username) {\n    const res = await this.request(`users/${username}/tags`)\n    return res.tags\n  }\n\n  static async getUserReferencePoints(username) {\n    const res = await this.request(`users/${username}/referencePoints`)\n    return res.referencePoints\n  }\n\n  static async updateProfile(username, data) {\n    const res = await this.request(`users/${username}`, data, 'patch')\n    return res.user\n  }\n\n\n\n  // Resources Requests\n\n  static async addTag(username, data) {\n    const res = await this.request(`users/${username}/tags`, data, 'post')\n    return res.tag\n  }\n\n  static async addReferencePoint(data) {\n    const res = await this.request('directory', data, 'post')\n    return res.bump\n  }\n\n  static async getTags() {\n    const res = await this.request(`directory/tags`)\n    return res.tags\n  }\n\n  static async deleteReferencePoint(id) {\n    console.log('hitting deleted')\n\n    const res = await this.request(`directory/${id}`, id, 'delete')\n    console.log('deleted')\n    return res.referencePoint\n  }\n\n\n\n  // Directory Requests\n\n  static async addToDirectory(id, data) {\n    const res = await this.request(`directory/${id}`, data, 'patch')\n    return res\n  }\n\n  static async getCategories() {\n    const res = await this.request('directory/categories')\n    return res.categories\n  }\n\n  static async getSubcategories(id) {\n    const res = await this.request(`directory/categories/${id}`)\n    return res.subcategories\n  }\n\n  static async getHeaders(categoryId, subcategoryId) {\n    const res = await this.request(`directory/categories/${categoryId}/subcategories/${subcategoryId}`)\n    return res.headers\n  }\n\n  static async getHeaderValues(username) {\n    const res = await this.request(`directory/header/${username}`)\n    return res.headerValues\n  }\n\n  static async getSpecificReferencePointInfoById(id) {\n    const res = await this.request(`directory/${id}`)\n    return res.referencePoint\n  }\n\n  static async getBasicReferencePointInfoById(id) {\n    const res = await this.request(`steps/${id}`)\n    return res.referencePoint\n  }\n}\n\nCultureBumpApi.token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZ\" +\n    \"SI6InRlc3R1c2VyIiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTU5ODE1OTI1OX0.\" +\n    \"FtrMwBQwe6Ue-glIFgz_Nf8XxRT2YecFCiSpYL0fCXc\"\n\nexport default CultureBumpApi","import React from 'react'\n\nconst Loading = () => {\n  return (\n    <p>Loading ...</p>\n  )\n}\n\nexport default Loading","import React, {useState, useContext, useEffect} from 'react'\nimport { useParams } from 'react-router-dom'\nimport {useHistory} from 'react-router-dom'\nimport UserContext from '../context/UserConext'\nimport CultureBumpApi from '../api/api'\nimport Loading from '../components/Loading'\nimport \"react-widgets/styles.css\"\nimport {Combobox, DropdownList} from \"react-widgets\"\nimport { Container, Form, Row, Col, Card, Button} from 'react-bootstrap'\n\n\nconst DirectoryAdd = () => {\n  const history = useHistory()\n  const {id} = useParams()\n\n  const {currentUser}  = useContext(UserContext)\n  const username = currentUser.username\n  const [isHidden, setIsHidden] = useState(false)\n  const [titleComponents, setTitleComponents] = useState(null)\n  const [referencePoint, setReferencePoint] = useState({})\n\n  const [headerValues, setHeaderValues] = useState({\n    headerSituation: [],\n    headerSpecification: [],\n    categories: [],\n    subcategories: [],\n    userTags: []\n  })\n\n  const [formData, setFormData] = useState({\n    headerSituationAdverb: '',\n    headerSituation: {},\n    headerSpecification: {},\n    category: {},\n    subcategory: {},\n    tag: {}\n  })\n\n\n  useEffect(function loadPageInfo() {\n    async function getPageInfo() {\n\n      const referencePoint = await CultureBumpApi.getBasicReferencePointInfoById(id)\n      const headerValues = await CultureBumpApi.getHeaderValues(username)\n\n      setReferencePoint(referencePoint)\n      setHeaderValues(headerValues)\n\n      if (headerValues.userTags && headerValues.userTags.length === 0) {\n        alert(\"Looks like you haven't added any Shared Reference Group Tags to your profile. Please edit your profile and add at least one tag in order to add your reference point to the directory\")\n        history.push(`/users/${username}`)\n      }\n    }\n    getPageInfo()\n  }, [])\n\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    let formatedHeaderSituation;\n\n    if (formData.headerSituationAdverb) {\n      formatedHeaderSituation = `${formData.headerSituationAdverb} ${formData.headerSituation}`\n    } else {\n      formatedHeaderSituation = formData.headerSituation\n    }\n\n    const data = {\n      header_situation_id: formatedHeaderSituation,\n      header_specification_id: formData.headerSpecification, \n      header_tag_id: formData.tag, \n      category_id: formData.category,\n      subcategory_id: formData.subcategory \n    } \n\n    await CultureBumpApi.addToDirectory(id, data)\n    history.push(`/directory`)\n  }\n\n  const formatTitle = (event) => {\n    event.preventDefault()\n    let headerSituation;\n    let headerSpecification;\n    let tag;\n    \n    if (typeof formData.headerSituation === 'string') {\n      headerSituation = `${formData.headerSituationAdverb} ${formData.headerSituation}`\n    } else { \n      headerSituation = formData.headerSituation.header_situation\n    }\n\n    if (typeof formData.headerSpecification === 'string') {\n      headerSpecification = formData.headerSpecification\n    } else { \n      headerSpecification = formData.headerSpecification.header_specification\n    }\n\n    if (typeof formData.tag === 'string') {\n      tag = formData.tag\n    } else { \n      tag = formData.tag.tag\n    }\n\n    if (headerSituation && headerSpecification && tag) {\n      let title = (\n        <div>\n          <p>\n            Does the title below sound right? \n            To change your title, edit your above answers and hit the formate title button again.\n          </p>\n          <p>{headerSituation} {headerSpecification} in {tag}</p>\n        </div>\n      )\n      setTitleComponents(title)\n    }\n  }\n\n  function checkIfEmpty(value) {  \n    typeof value === 'string' ? setIsHidden(false) : setIsHidden(true)\n  }\n\n  function hideInput(event) {\n    isHidden ? setIsHidden(false) : setIsHidden(true)\n    setFormData(formData => ({\n      ...formData,\n      headerSituationAdverb: ''\n    }))\n  }\n\n  if (!referencePoint) return <Loading/>\n\n  const {\n    universal,\n    action,\n    qualities\n  } = referencePoint\n  \n  return (\n    <div>\n      <Container>\n        <Row>\n          <Card>\n            <Card.Title>Add To Directory</Card.Title>\n            <Card.Body>{universal && universal}</Card.Body>\n            <Card.Body>{action && action}</Card.Body>\n            <Card.Body>{qualities && qualities}</Card.Body>\n          </Card>\n          <Form onSubmit={handleSubmit}>\n            <h2>Format The Title</h2>\n            <Form.Group>\n\n              <Form.Label>What is the situation?</Form.Label>\n              <Col>\n                {!isHidden ? \n                  <select \n                    name=\"headerSituationAdverb\" \n                    id=\"headerSituationAdverb\" \n                    placeholder='When'\n                    onChange={(event) => {\n                      const {name, value} = event.target\n\n                      setFormData(formData => ({\n                          ...formData,\n                          [name]: value\n                      }))}}\n                  >\n                    <option value='' disabled selected>Choose option</option>\n                    <option value=\"When\">When</option>\n                    <option value=\"How\">How</option>\n                    <option value=\"What\">What</option>\n                    <option value=\"Where\">Where</option>\n                  </select> : null\n                }\n              </Col>\n              <Col>\n                <Combobox \n                  data={headerValues.headerSituation}\n                  dataKey='id'\n                  textField='header_situation'\n                  placeholder='I arrive late'\n                  filter='contains'\n                  hideEmptyPopup \n                  autoSelectMatches\n                  onChange={(param) => {\n                    checkIfEmpty(param)\n                    setFormData(formData => ({\n                        ...formData,\n                        headerSituation: param\n                    }))\n                  }}\n                  onSelect={(param) => hideInput(param)}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>\n                Do you do this in a specific location, with specific people, \n                or in a specific situation? (Such as at work, to people in authority, \n                during a holiday)\n              </Form.Label>\n              <Combobox \n                data={headerValues.headerSpecification}\n                dataKey='id'\n                textField='header_specification'\n                placeholder='to class'\n                hideEmptyPopup\n                autoSelectMatches\n                filter='contains' \n                onChange={(param) => {\n                  setFormData(formData => ({\n                      ...formData,\n                      headerSpecification: param\n                  }))\n                }}\n              />\n            </Form.Group>\n\n            <Form.Group>\n            <Form.Label>\n                Is this an action typically shared by one of your reference group?\n                 If so, which one?\n              </Form.Label>\n              <Form.Label>In</Form.Label>\n            <DropdownList\n              data={headerValues.userTags}\n              dataKey='id'\n              textField='tag'\n              placeholder='United States'\n              onChange={(param) => {\n                setFormData(formData => ({\n                    ...formData,\n                    tag: param\n                }))\n              }}\n            />\n            </Form.Group>\n            \n            {titleComponents ? titleComponents : <p>please fill out all of the above questions</p>}\n            <Button onClick={formatTitle}>Format Title</Button>\n          \n            <h2>Pick The Categories</h2>\n            <Form.Group>\n              <Form.Label>\n                Pick a good category for your  new reference point \n                so others can find it\n              </Form.Label>\n              <Combobox \n                data={headerValues.categories}\n                dataKey='id'\n                textField='category'\n                placeholder='In School'\n                hideEmptyPopup\n                autoSelectMatches\n                filter='contains' \n                onChange={(param) => {\n                  setFormData(formData => ({\n                      ...formData,\n                      category: param\n                  }))\n                }}\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>\n                Does it fit in a good subcategory? \n              </Form.Label>\n              <Combobox \n                data={headerValues.subcategories}\n                dataKey='id'\n                textField='subcategory'\n                placeholder='classroom etiquette'\n                hideEmptyPopup\n                autoSelectMatches\n                filter='contains' \n                onChange={(param) => {\n                  setFormData(formData => ({\n                      ...formData,\n                      subcategory: param\n                  }))\n                }}\n              />\n            </Form.Group>\n            <Button type='submit'>Submit</Button>\n          </Form>\n        </Row>\n      </Container>\n    </div>\n  )\n}\n\nexport default DirectoryAdd","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nconst Universal = ({tag, headerSpecification, headerSituation, id}) => {\n\n  return (\n    <div>\n      <Link to={`directory/${id}`}>{headerSituation} {headerSpecification} in {tag}</Link>\n    </div>\n  )\n}\n\nexport default Universal","import React, {useState} from 'react'\nimport Universal from './Universal'\nimport CultureBumpApi from '../api/api'\nimport {Accordion} from 'react-bootstrap'\n\n\nconst Subcategory = ({subcategory, categoryId, subcategoryId}) => {\n  const [headers, setHeaders] = useState([])\n  const [isDisplayed, setIsDisplayed] = useState(false)\n\n  const getHeaders = async () => {\n    const headers = await CultureBumpApi.getHeaders(categoryId, subcategoryId)\n    setHeaders(headers)\n    isDisplayed ? setIsDisplayed(false) : setIsDisplayed(true)\n  }\n\n  return (\n    <div>\n      <Accordion flush>\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header onClick={getHeaders}>{subcategory}</Accordion.Header>\n          <Accordion.Body>\n          {headers && \n              headers.map(({tag, headerspecification, headersituation, id}) => \n            <Universal \n              headerSpecification={headerspecification} \n              tag={tag} \n              headerSituation={headersituation} \n              id={id}/>)\n          }\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n\n\n\n\n      {/* <p onClick={getHeaders}>{subcategory}</p> */}\n      {/* {isDisplayed && headers && \n        headers.map(({tag, headerspecification, headersituation, id}) => \n          <Universal \n            headerSpecification={headerspecification} \n            tag={tag} \n            headerSituation={headersituation} \n            id={id}/>)\n      } */}\n    </div>\n  )\n}\n\nexport default Subcategory","import React, {useEffect, useState} from 'react'\nimport Subcategory from './Subcategory.js'\nimport CultureBumpApi from '../api/api.js'\nimport {Accordion} from 'react-bootstrap'\n\n\nconst Category = ({category, id}) => {\n  const [subcategories, setSubcategories] = useState(null)\n  const [isDisplayed, setIsDisplayed] = useState(false)\n\n  useEffect(function checkSubcategories() {\n    async function getAllSubcategories() {\n      const subcategories = await CultureBumpApi.getSubcategories(id)\n      setSubcategories(subcategories)\n    }\n    getAllSubcategories()\n  }, [])\n\n  const displaySubcategories = async () => {\n    isDisplayed ? setIsDisplayed(false) : setIsDisplayed(true)\n  }\n\n  const accordionComponents = (\n    <Accordion flush>\n      <Accordion.Item eventKey=\"0\">\n        <Accordion.Header onClick={displaySubcategories}>{category}</Accordion.Header>\n        <Accordion.Body>\n          {subcategories && subcategories.map(({\n            subcategory, \n            categoryid: categoryId, \n            subcategoryid: subcategoryId\n            }) => <Subcategory \n                    subcategory={subcategory} \n                    subcategoryId={subcategoryId} \n                    categoryId={categoryId}/>)\n          }\n        </Accordion.Body>\n      </Accordion.Item>\n    </Accordion>\n  )\n\n  return (\n    <div>\n      {subcategories && subcategories.length !== 0 ? accordionComponents : null}\n    </div>\n  )\n}\n\nexport default Category","import React, {useState, useEffect} from 'react'\nimport Category from './Category.js'\nimport CultureBumpApi from '../api/api.js'\nimport Loading from '../components/Loading'\nimport {Container, Row} from 'react-bootstrap'\nimport './List.css'\n\n\nconst DirectoryList = () => {\n  const [categories, setCategories] = useState([])\n\n  useEffect(function loadCategories() {\n    async function getCategories() {\n      const categories = await CultureBumpApi.getCategories()\n      setCategories(categories)\n    }\n    getCategories()\n  }, [])\n\n  if (!categories) return <Loading/>\n\n  return (\n    <div>\n      <Container fluid className=\"directory-component\">\n        <Row className=\"justify-content-center\">\n\n          <h1 className='header'>Culture Bump Directory</h1>\n          <p className='instruction'>Click on the categories to navigate through the directory.</p>\n          {categories && categories.map(\n            ({category, id}) => <Category category={category} id={id}/>)\n          }\n\n        </Row>\n      </Container>\n    </div>\n  )\n}\n\nexport default DirectoryList  ","import React from 'react'\nimport { Card, Col, Container, Row } from 'react-bootstrap'\nimport './ReferencePoint.css'\nconst ReferencePoint = ({  \n    tag,  \n    action, \n    headerSituation, \n    headerSpecification, \n    qualities\n  }) => {\n\n  return (\n    <div>\n      <Container className='details-componenet'>\n        <Card className=\"text-center card\">\n          <Row className='title'>\n            <Card.Title>Reference Point</Card.Title>\n          </Row>\n          <Row>\n            <Col>\n              <Card.Subtitle>Situation</Card.Subtitle>\n            </Col>\n\n            <Col>\n              <Card.Subtitle>Specific Location or Detail</Card.Subtitle>\n            </Col>\n\n            <Col>\n              <Card.Subtitle>General Shared Reference Group</Card.Subtitle>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Card.Body>{headerSituation}</Card.Body>\n            </Col>\n\n            <Col>\n              <Card.Body>{headerSpecification}</Card.Body>\n            </Col>\n\n            <Col>\n              <Card.Body>{tag}</Card.Body>\n            </Col>\n          </Row>\n          <Row className='personal-details-section'>\n              <Card.Subtitle>I would ...</Card.Subtitle>\n              <Card.Body className='spacer'>{action}</Card.Body>\n\n              <Card.Subtitle className='spacer'>When I do this, I am being...</Card.Subtitle>\n              <Card.Body>{qualities}</Card.Body>\n          </Row>\n          <Row>\n            <Card.Body className='question-section'>\n              What about you? Think about how you express these qualities in your life?\n            </Card.Body>\n          </Row>\n        </Card>\n      </Container>     \n    </div>\n  )\n}\n\nexport default ReferencePoint","import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport ReferencePoint from '../cards/ReferencePoint'\nimport CultureBumpApi from '../api/api'\nimport Loading from '../components/Loading'\n\nconst DirectoryDetails = () => {\n  const {id} = useParams()\n  const [referencePoint, setReferencePoint] = useState({})\n\n  useEffect(function loadDetails() {\n    async function getDetails() {\n      const referencePoint = await CultureBumpApi.getSpecificReferencePointInfoById(id)\n      setReferencePoint(referencePoint)\n    }\n    getDetails()\n  }, [])\n\n  const {\n    universal, \n    action, \n    headersituation, \n    headerspecification, \n    tag,\n    qualities, \n    user_id\n  } = referencePoint\n\n  if (!referencePoint) return <Loading/>\n  \n  return (\n    <div>\n      <ReferencePoint \n        universal={universal}\n        action={action}\n        headerSituation={headersituation}\n        headerSpecification={headerspecification}\n        tag={tag}\n        qualities={qualities} \n        userId={user_id}\n      />\n    </div>\n  )\n}\n\nexport default DirectoryDetails","import React from 'react'\n\nconst Step1Tips = () => {\n  return (\n    <>\n      <h4>Finding a culture bump</h4>\n        <p>\n          Recall a time when something caught your attention, \n          when you noticed something different or when someone \n          did something you wouldn't have done.\n        </p>\n        <p>Then tell what your perception was—in other words, what you thought about it.</p>\n      <h4>What if the bump/situation has happened multiple times?</h4>\n        <p>\n          Focus on one particular time, perhaps the first time you \n          encountered the bump or the last time.\n        </p>\n      <h4>Don't tell the story about the incident </h4>\n        <p>\n          Instead of telling the story of what happened, you are looking only \n          for certain details (the person or thing you bumped with and your \n          intial thought about the incident) that will be the starting place \n          of your 8 Steps. \n        </p>\n        <p>So don't talk about motivations or feelings in this step.</p>\n    </>\n  )\n}\n\nconst Step2Tips = () => {\n  return (\n    <>\n      <h4>Keep it simple</h4>\n        <p>\n          Don’t tell the story. Just focus on the actions and words you \n          can see or hear. (Or, taste or touch if in the case of an \n          object).\n        </p>\n      <h4>What if the bump/situation has happened multiple times?</h4>\n        <p>Describe exactly what you saw, heard, touched, or smelled. \n          Even though it is somewhat artificial, report exactly what \n          happened with no interpretation.</p>\n        <ul>\n          <li>\n            Descriptive Observations: crying, hands out in front of him, \n            said “That’s cool.”\n          </li>\n          <li>\n            Non-descriptive Observations: sad, nervous, rude, in an angry tone.\n          </li>\n        </ul>\n      <h4>Don’t add how you felt or your thoughts about the incident.</h4>\n        <p>\n          Don’t tell the story. Just focus on the actions and words saw, \n          heard, touched, or smelled.\n        </p>\n    </>\n  )\n}\n\nconst Step3Tips = () => {\n  return (\n    <>\n      <h4>Use descriptive language only</h4>\n        <p>\n          Describe exactly what you  did—using only precise and literal \n          descriptive language. \n        </p>\n        <ul>\n          <li>\n            Correct: I stepped backward and said, “No, thank you.”\n          </li>\n          <li>\n            Incorrect: I stepped backward in fear and said nervously, \n            “No, thank you.”\n          </li>\n        </ul>\n      <h4>Focus on yourself</h4>\n        <p>\n          Don’t tell the story or add how you felt or your thoughts about \n          the other person or yourself. Just focus on your actions and words.\n        </p>\n    </>\n  )\n}\n\nconst Step4Tips = () => {\n  return (\n    <>\n      <h4>Try to identify as many emotions as possible.</h4>\n        <p>\n          Many times we are aware of being mad or angry but underneath we \n          may feel a more \"tender\" or impactful emotion such as \"fear\" or \"sad.\" \n        </p>\n        <p>\n          Look for the most “tender” or impactful emotion. It typically is \n          the last emotion you identify. (People often think, “wow, I didn’t \n          know I felt that.” when they name it.)\n        </p>\n        <p>\n          You will actually feel a “release” from the bump when you identify \n          all of your emotions.\n        </p>\n        <p>\n          Note: Some emotions may contradict one another.\n        </p>\n        <h4>Focus on yourself</h4>\n        <ul>\n          <li>\n            Correct: sad, honored, weary\n          </li>\n          <li>\n            Incorrect: he made me..., I thought they were..., he was scared, etc.\n          </li>\n        </ul>\n      <h4>Do not describe why you felt an emotion or use words like: felt like, \n        felt that, or felt about. \n      </h4>\n        <p>\n          Don’t tell the story or add how you felt or your thoughts about \n          the other person or yourself. Just focus on your actions and words.\n        </p>\n        <ul>\n          <li>\n            Correct: sad, honored, weary\n          </li>\n          <li>\n            Incorrect: normal, upset, tired, hungry, \n          </li>\n        </ul>\n        <p>\n          Example List of Emotions:\n        </p>\n        <ul>\n          <li>\n            Surprise: Shock, astonishment, amazement, wonder\n          </li>\n          <li>\n            Anger: Fury, resentment, exasperation, indignation, irritability, \n            annoyance, hatred\n          </li>\n          <li>\n            Fear: Anxiety, scared, nervous, concern, wariness, panic, terror\n          </li>\n          <li>\n            Sadness: Grief, hurt, sorrow, melancholy, self-pity, dejection, \n            despair, disappointed\n          </li>\n          <li>\n            Enjoyment: Happy, joy, relief, contentment, delight, satisfied, \n            euphoria\n          </li>\n          <li>\n            Love: Acceptance, trust, kindness, connectedness, adoration, \n            infatuation \n          </li>\n          <li>\n            Disgust: Contempt, disdain, scorn, aversion, distaste \n          </li>\n          <li>\n            Shame: Inferior/superior, guilt, embarrassment, chagrin, remorse, \n            humiliation, regret, mortification\n          </li>\n        </ul>\n    </>\n  )\n}\n\nconst Step5Tips = () => {\n  return (\n    <>\n      <h4>Why do you think they did what they did?</h4>\n        <p>\n          When asking yourself \"why\" the other person did what they did, you \n          are trying to identify the situation to which they were responding—not \n          to “understand” the other person(s)’ motive. \n        </p>\n        <p>\n          Their action was in response to a particular situation. If you \n          were in the same situation, you would most likely have responded \n          differently. Here you are looking to pin point what that situation \n          might have been.\n        </p>\n        <p>\n          Don't worry about trying to pick the exact \"correct\" situation. Just \n          try to find a universal situation that could have led to their response \n          and your culture bump.\n        </p>\n        <p>\n          The situation usually begins with a verb such as:\n        </p>\n        <ul>\n          <li>\n            Wanting to...\n          </li>\n          <li>\n            Needing to...\n          </li>\n          <li>\n            Explaining...\n          </li>\n          <li>\n            Being...\n          </li>\n        </ul>\n      <h4>Is it a Universal?</h4>\n        <p>\n          Universal Situations are something anyone from any culture could find \n          themselves in. Here are some helpful tips:\n        </p>\n        <p>\n          Instead of specific people's names, change it to their role in the \n          situation.\n        </p>\n        <ul>\n          <li>\n            Explaining...\n          </li>\n          <li>\n            Being...\n          </li>\n        </ul>\n        <p>\n          You can add more details to make it specific such as: \n          Roles of the individuals involved, the ages, pertinent relationships, \n          gender, or whether the situation occurred in public or in private.\n        </p>\n    </>\n  )\n}\n\nconst Step6Tips = () => {\n  return (\n    <>\n      <h4>Use descriptive language</h4>\n        <p>\n        Try to make the behavior as precise and vivid as possible—Add as \n        many details as you can recall. \n        </p>\n        <p>\n        Don’t focus on why you did anything in this step.\n        </p>\n        <ul>\n          <li>\n            Correct: I stepped backward and said, “No, thank you.”\n          </li>\n          <li>\n            Incorrect: I stepped backward in fear and said nervously, \n            “No, thank you.”\n          </li>\n        </ul>\n      <h4>There may be more than one pattern of behavior on yourself</h4>\n        <p>\n          Often we learn behaviors from family, teachers, personal \n          experiences, or our own personalities which may mean that what \n          you would do might be different from your community at large, or \n          that there are several possible responses to this same situation.\n        </p>\n        <h4>Image yourself in that exact situation</h4>\n        <p>\n          If you cannot remember being in the exact situation, imagine \n          what you would do if you ever found yourself in a similar \n          position. Or you might think of what someone from your \"group\" \n          would do in that situation.\n        </p>\n    </>\n  )\n}\n\nconst Step7Tips = () => {\n  return (\n    <>\n      <h4>Finding Qualities</h4>\n        <p>\n          Remember in Step 1, when you said \"I thought that was...(rude, silly, nice, etc).\" You were associating an action someone did with a quality. This is similar. You associate the actions above in step six with certain qualities. When your brain see someone doing those actions, it thinks (often subconsciously) \"Oh they are being...(considerate, wise, etc).\"\n        </p>\n        <p>\n          Imagine yourself in that situation or that you are watching someone doing the actions you listed in Step 6, and then ask yourself, \"What kind of person acts or speaks that way?\"\n        </p>\n        <h4>Avoid using normal or “not</h4>\n        <p>\n          Do not use the word Normal. (\"They're being normal.\") Look deeper to find the specific qualities that make the action \"feel\" than normal.\n        </p>\n        <p>\n          Try to pick the exact quality instead of merely stating “NOT....”\n        </p>\n        <p>\n          Here is a list of a few of the millions of human qualities. Notice that qualities can be positive or negative.\n        </p>\n        <ul>\n          <li>\n            Selfless\n            Thoughtful\n            Cautious\n            Caring, Concerned\n            Successful\n            Competent\n            Modest\n            Loving\n            Cool\n            Considerate\n            Forthright\n            Empowering\n            Collaborative\n          </li>\n          <li>\n            Selfish\n            Thoughtless/Shallow\n            Reckless\n            Inconsiderate\n            Failing\n            Incompetent\n            Show-off \n            Hateful\n            Dorky\n            Mean\n            Sneaky/secretive\n            Discouraging\n            Obstructive\n          </li>\n      </ul>\n    </>\n  )\n}\n\nexport {\n  Step1Tips,\n  Step2Tips,\n  Step3Tips,\n  Step4Tips,\n  Step5Tips,\n  Step6Tips,\n  Step7Tips\n}","import React, {useState} from 'react'\nimport { Button } from 'react-bootstrap'\n\nconst Tips = ({Tip}) => {\n  const [isDisplayed, setIsDisplayed] = useState(false)\n\n  const toggle = (event) => {\n    event.preventDefault()\n    isDisplayed ? setIsDisplayed(false) : setIsDisplayed(true)\n  }\n\n  return (\n    <div>\n      <Button variant=\"outline-secondary\" onClick={toggle}>Tips</Button>\n      {isDisplayed && isDisplayed ? Tip : null}\n    </div>\n  )\n}\n\nexport default Tips","import React, {useContext, useEffect, useState} from 'react'\nimport UserContext from '../context/UserConext'\nimport {useHistory} from 'react-router-dom'\nimport {\n  Step1Tips,\n  Step2Tips,\n  Step3Tips,\n  Step4Tips,\n  Step5Tips,\n  Step6Tips,\n  Step7Tips\n} from '../components/StepTips'\nimport CultureBumpApi from '../api/api'\nimport TipCard from '../cards/Tip'\nimport {Card, Form, Container, Row, Button} from 'react-bootstrap'\nimport './Add.css'\n\nconst StepsAddForm = () => {\n  const history = useHistory()\n  const {currentUser} = useContext(UserContext)\n  const [formErrors, setFormErrors] = useState({})\n  const [isSubmitted, setIsSubmitted] = useState(false)\n  const [formData, setFormData] = useState({\n    type: '', \n    spark: '', \n    thought: '',\n    observation: '',\n    response: '',\n    emotions: '',\n    universal: '',\n    action: '',\n    qualities: '',\n    connectionPoint: ''\n  })\n  const {  \n    type, \n    spark, \n    thought,\n    observation,\n    response,\n    emotions,\n    universal,\n    action,\n    qualities,\n    connectionPoint\n  } = formData\n\n  useEffect(() => {\n    async function submitToServer() {\n      if(Object.keys(formErrors).length === 0 && isSubmitted) {  \n        const referencePointData = {\n          type, \n          spark, \n          thought,\n          observation,\n          response,\n          emotions,\n          universal,\n          action,\n          qualities,\n          connectionPoint,\n          username: currentUser.username\n        } \n  \n        await CultureBumpApi.addReferencePoint(referencePointData)\n        setFormData(formData => ({...formData}))\n        \n        history.push(`/directory`)\n      }\n    }\n    submitToServer()\n  }, [formErrors]) \n  \n  const validate = (values) => {\n\n    const errors = {}\n    const keys = [\n      'type',\n      'spark', \n      'thought',\n      'observation',\n      'response',\n      'emotions',\n      'universal',\n      'action',\n      'qualities',\n      'connectionPoint']\n\n    for (let i = 0; i < keys.length; i++) {\n      if (!values[keys[i]]) {\n        errors[keys[i]] = \"Answer is required\"\n      }\n    }\n\n    return errors\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    setFormErrors(validate(formData))\n    setIsSubmitted(true)\n  }\n\n  const handleChange = event => {\n    const {name, value} = event.target\n\n    setFormData(formData => ({\n        ...formData,\n        [name]: value\n    }))\n  }\n \n  console.log('formData', formData)\n  return (\n    <div>\n      <Container className='steps-component'>\n        <Row>\n          <h1>8 Steps</h1>\n          <p>\n            Two things happen in the brain when we encounter a differnce. \n            A mental disconnection (why would they do that?) and a Emotional disconnection\n            (I still feel (insert emotion here) about that situation or person).\n          </p>\n          <p>\n             Studies show there are certain steps that need to happen in order to unhook from our emotions, \n             work through what happened, and repair the two disconnection that happened at the time \n             of the culture bump. \n          </p>\n          <p>\n            The 8 Step tool walks you through those steps and gives you the power to connect and \n            reconnect with anyone anywhere.\n          </p>\n          <Form>\n          <h3>Detach from the culture bump</h3>\n            <Card>\n              <Row className='tip'>\n                <Card.Title>Step 1: Pinpoint The Culture Bump</Card.Title>\n                <TipCard Tip={<Step1Tips/>}/>    \n              </Row>    \n\n              <Row className='inputs'>\n              <Form.Group>\n                <Form.Label>I had a</Form.Label>\n                <Form.Select id='type' name='type' aria-label=\"Default select example\" onChange={handleChange}>\n                  <option>Choose one:</option>\n                  <option value=\"Positive\">Positive</option>\n                  <option value=\"Negative\">Negative</option>\n                  <option value=\"Neutral\">Neutral</option>\n                </Form.Select>\n              \n                <Form.Label className='input-labels'>culture bump with</Form.Label>\n                  <Form.Control\n                    id='spark'\n                    name='spark'\n                    placeholder='ex: person(s) or object(s)'\n                    type='text'\n                    value={formData.spark}\n                    onChange={handleChange}/>\n\n                <Form.Label className='input-labels'>and I thought that was</Form.Label>\n                  <Form.Control\n                    id='thought'\n                    name='thought'\n                    placeholder='ex: surprising, rude, cute, etc.'\n                    type='text'\n                    value={formData.thought}\n                    onChange={handleChange}/>\n              </Form.Group>\n           \n              <Form.Text>{formErrors.type}</Form.Text>\n              <Form.Text>{formErrors.spark}</Form.Text>\n              <Form.Text>{formErrors.thought}</Form.Text>\n              </Row>\n            </Card>\n\n            <Card>\n              <Row className='tip'>\n                <Card.Title>Step 2: Describe What The Other Person(s) Did</Card.Title>\n                <TipCard Tip={<Step2Tips/>}/>    \n              </Row>    \n\n              <Row className='inputs'>\n                <Form.Group>\n                  <Form.Label>What did the other person(s) do or say?\n                    Or, in case of an object, describe it physically.</Form.Label>\n                  <Form.Control\n                    id='observation'\n                    name='observation'\n                    placeholder=\n                      {'ex: they looked at the sign that said \"No Entrance\" and walked into the door'}\n                    type='text'\n                    value={observation}\n                    onChange={handleChange}/>\n                  <Form.Text>{formErrors.observation}</Form.Text>\n                </Form.Group>\n              </Row>\n            </Card>\n \n            <Card>\n                <Row className='tip'>\n                  <Card.Title>Step 3: Describe What You Did</Card.Title>\n                  <TipCard Tip={<Step3Tips/>}/>    \n                </Row>    \n\n                <Row className='inputs'>\n                  <Form.Group>\n                    <Form.Label>What did I do or say?</Form.Label>\n                    <Form.Control\n                      id='response'\n                      name='response'\n                      placeholder=\n                        'ex: I looked at them, sighed, and remained sitting'\n                      type='text'\n                      value={response}\n                      onChange={handleChange}/>\n                    <Form.Text>{formErrors.response}</Form.Text>\n                  </Form.Group>\n                </Row>\n            </Card>\n \n            <Card>\n                <Row className='tip'>\n                  <Card.Title>Step 4: List The Emotions You Felt When The Bump Happened</Card.Title>\n                  <TipCard Tip={<Step4Tips/>}/>    \n                </Row>    \n\n                <Row className='inputs'>\n                  <Form.Group>\n                    <Form.Label>At the time of the culture bump, the emotions I felt were:</Form.Label>\n                    <Form.Control\n                      id='emotions'\n                      name='emotions'\n                      placeholder=\n                        'ex: surprised, nervous, disappointed, out of place'\n                      type='text'\n                      value={emotions}\n                      onChange={handleChange}/>\n                    <Form.Text>{formErrors.emotions}</Form.Text>\n                  </Form.Group>\n                </Row>\n            </Card>\n           \n            <h3>Discover our commonalities</h3>\n            <Card>\n                <Row className='tip'>\n                  <Card.Title>\n                    Step 5: Find The Universal Situation In\n                    The Incident When It Happened\n                  </Card.Title>\n                  <TipCard Tip={<Step5Tips/>}/>    \n                </Row>    \n\n                <Row className='inputs'>\n                <Form.Group>\n                  <Form.Label>\n                    Now let's find a universal situation for your culture bump.\n                    It will be something that could happen to anyone from anywhere,\n                    like arriving late or feeling hungry in class or a meeting.\n                  </Form.Label>\n                  <Form.Label>Find the universal situation in this incident.\n                    (What is the situation that they were responding to?)</Form.Label>\n                  <Form.Control\n                    id='universal'\n                    name='universal'\n                    placeholder=\n                      'ex: Wanting to ignore a rule'\n                    type='text'\n                    value={universal}\n                    onChange={handleChange}/>\n                  <Form.Text>{formErrors.universal}</Form.Text>\n                </Form.Group>\n                </Row>\n            </Card>\n \n            <Card> \n                <Row className='tip'>\n                  <Card.Title>\n                    Step 6: List And Describe Specific Actions You\n                    Would Do In The Universal Situation From Step 5\n                  </Card.Title>\n                  <TipCard Tip={<Step6Tips/>}/>    \n                </Row>    \n\n                <Row className='inputs'>\n                  <Form.Group>\n                    <Form.Label>List and describe specific actions you would do in the\n                      universal situation from Step 5.\n                    </Form.Label>\n                    <Form.Control\n                      id='action'\n                      name='action'\n                      placeholder=\n                      {`ex: I would complain to my friends, but would still follow the rule anyways.`}\n                      type='text'\n                      value={action}\n                      onChange={handleChange}/>\n                    <Form.Text>{formErrors.action}</Form.Text>\n                  </Form.Group>\n                </Row>\n            </Card>\n \n            <Card>\n              <Row className='tip'>\n                <Card.Title>\n                  Step 7: List The Qualities That You Feel That Action Demonstrates\n                </Card.Title>\n                <TipCard Tip={<Step7Tips/>}/>    \n              </Row>    \n\n              <Row className='inputs'>\n                <Form.Group>\n                  <Form.Label>When people in my culture (or group) do the actions\n                    I listed in Step 6, I say they are being:\n                  </Form.Label>\n                  <Form.Control\n                    id='qualities'\n                    name='qualities'\n                    placeholder=\n                      'ex: responsible, mature, trustworthy, calm'\n                    type='text'\n                    value={qualities}\n                    onChange={handleChange}/>\n                  <Form.Text>{formErrors.qualities}</Form.Text>\n                </Form.Group>\n              </Row>\n            </Card>\n \n            <h3>Reconnect beyond the culture bump</h3>\n            <Card>\n              <Row className='tip'>\n                <Card.Title>\n                  Step 8: Ask or think about how those qualities are\n                  demonstrated by other people\n                </Card.Title>\n              </Row>    \n\n              <Row className='inputs'>\n                <Form.Group>\n                  <Form.Label>\n                    How does the other person(s) you had the culture bump with express\n                    the qualities you listed in Step 7? (If you do not know, consider\n                    starting a conversation with a question like, \"How do you like to show\n                    (a quality from Step 7))?\"\n                  </Form.Label>\n                  <Form.Control\n                    id='connectionPoint'\n                    name='connectionPoint'\n                    placeholder=\n                      {`ex: I never thought about that.`}\n                    type='text'\n                    value={connectionPoint}\n                    onChange={handleChange}/>\n                  <Form.Text>{formErrors.connectionPoint}</Form.Text>\n                </Form.Group>\n              </Row>\n            </Card>\n\n            <Button onClick={handleSubmit}>Save</Button>\n          </Form>\n        </Row>\n      </Container>\n\n    </div>\n    \n  )\n}\n\nexport default StepsAddForm","import React, {useContext, useEffect, useState} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport UserContext from '../context/UserConext'\nimport CultureBumpApi from '../api/api'\nimport Combobox from \"react-widgets/Combobox\"\nimport { Card, Container, Form, Row, Badge, Button } from 'react-bootstrap'\nimport './Update.css'\n\nconst ProfileUpdate = () => {\n  const history = useHistory()\n\n  const {currentUser, userTags, setUserTags}  = useContext(UserContext)\n  const [allTags, setAllTags] = useState([])\n  const [formErrors, setFormErrors] = useState({})\n  const [isSubmitted, setIsSubmitted] = useState(false)\n  const [tagsToCompare, setTagsToCompare] = useState([])\n  const {username} = currentUser\n  const [formData, setFormData] = useState({\n    email: currentUser.email, \n    name: currentUser.name,\n    username: currentUser.username, \n    password: '',\n    matchingPassword: '',\n    tag: ''\n  })\n\n  useEffect(function loadUserProfileInfo() {\n    async function getUserInfo() {\n      try {\n        const allTags = await CultureBumpApi.getTags()\n        setAllTags(allTags)\n        \n        const userTags = await CultureBumpApi.getUserTags(username)\n        userTags.map(tagInfo => (\n          tagsToCompare.push(tagInfo.tag.toUpperCase())\n        ))\n\n        setUserTags(userTags)\n      } catch (error) {\n        setUserTags(null)\n        setAllTags(null)\n      }\n    }\n    getUserInfo()\n  }, [])\n\n  useEffect(function updateUserTags() {\n    async function getUpdatedUserTags() {\n      try {\n        const userTags = await CultureBumpApi.getUserTags(username)\n        userTags.map(tagInfo => (\n          tagsToCompare.push(tagInfo.tag.toUpperCase())\n        ))\n\n        setUserTags(userTags)\n      } catch (error) {\n        setUserTags(null)\n      }\n    }\n    getUpdatedUserTags()\n  }, [allTags])\n\n  useEffect(() => {\n    async function submitToServer() {\n      if (Object.keys(formErrors).length === 0 && isSubmitted) {\n        const userData = {\n          email: formData.email,\n          name: formData.name,\n        } \n    \n        if (formData.password.length !== 0) {\n          userData.password = formData.password\n        }\n    \n        const username = currentUser.username\n        const result = await CultureBumpApi.updateProfile(username, userData)\n\n        if (result.username) {\n          setFormData(formData => ({...formData, password: ''}))\n      \n          history.push(`/users/${username}`)\n        } else {\n          setFormErrors(formErrors => ({\n            ...formErrors,\n            result: true\n        }))\n        }\n      }\n    }\n    submitToServer()\n  }, [formErrors]) \n\n  const validate = (values) => {\n    const errors = {}\n    const regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    \n    if (!values.name) {\n      errors.name = \"Required\"\n    } else if (values.name.length <= 2) {\n      errors.name = \"Name value must be more than 2 characters\"\n    }\n\n    if (!values.email) {\n      errors.email = \"Required\"\n    } else if (!regex.test(values.email)) {\n      errors.email = \"Not a vaild email\"\n    }\n\n    if (values.password.length !== 0) {\n      if (values.password.length < 5) {\n        errors.password = \"Password must be more than 5 characters\"\n      } else if (values.password.length >= 20) {\n        errors.password = \"Password must be less than 20 characters\"\n      } else if (values.password !== values.matchingPassword) {\n        errors.password = \"Password does not match\"\n      }\n    }\n\n    return errors\n  }\n\n  const validateTags = (values) => {\n    const errors = {}\n\n    if (!values.tag) {\n      errors.tag = \"Please fill tag field\"\n    }\n    setIsSubmitted(false)\n    return errors\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    setFormErrors(validate(formData))\n    setIsSubmitted(true)\n  }\n\n  const handleChange = event => {\n    const {name, value} = event.target\n\n    setFormData(formData => ({\n        ...formData,\n        [name]: value\n    }))\n  }\n\n  const addTag = async (event) => {\n    event.preventDefault()\n    setFormErrors(validateTags(formData))\n\n    if (!formErrors.tag) {    \n      const tagToAdd = formData.tag.tag || formData.tag\n      function isDuplicate(tag) {\n        return tag === tagToAdd.toUpperCase()\n      }\n    \n      const result = tagsToCompare.filter(isDuplicate)\n  \n      if (result.length !== 0) {\n        alert('Found Duplicate')\n      } else {\n        const tagData = {tag: formData.tag}\n        const username = currentUser.username\n      \n        const res = await CultureBumpApi.addTag(username, tagData)\n        \n        setAllTags(allTags => ([\n          ...allTags, res.tag \n         ]))\n      }\n    }\n  }\n  \n  return (\n    <div>\n      <Container>\n        <Row className=\"justify-content-center\">\n          <Card style={{ width: '25rem' }}>\n            <Card.Title>Update Profile</Card.Title>\n            <Card.Body className='update-info'>Username: {currentUser.username}</Card.Body>\n            <Card.Subtitle className='update-section-header'>Shared Reference Groups:</Card.Subtitle>\n            <Row className='section-content'>\n              <Card.Body>Don't see the tag you're looking for on the list? Add a new!</Card.Body>\n              {\n                userTags && userTags ? \n                userTags.map(tag => <span><Badge size=\"sm\" bg=\"primary\">{tag.tag}</Badge></span>) : null\n              }\n              <Form onSubmit={addTag}>\n                <Form.Group className=\"mb-3\">\n                  <Form.Label className='label'>User Tag</Form.Label>\n                    <Combobox \n                      data={allTags}\n                      dataKey='id'\n                      textField='tag'\n                      placeholder='Japan'\n                      filter='contains'\n                      hideEmptyPopup \n                      autoSelectMatches\n                      onChange={(param) => {\n                        setFormData(formData => ({\n                          ...formData,\n                          tag: param\n                        }))\n                      }}\n                    />\n                  <Form.Text>{formErrors.tag}</Form.Text>   \n                  <Button className='update-button' type='submit'>Add Tag</Button>\n                </Form.Group>\n              </Form>\n            </Row>\n            <Row className='section-content'>\n              <Form onSubmit={handleSubmit}>\n                <Form.Group>\n                  <Card.Body>Fill in your update info below and hit the button to save</Card.Body>\n                  <Form.Label>Name</Form.Label>\n                  <Form.Control \n                    id='name'\n                    name='name'\n                    placeholder='name'\n                    type='text'\n                    value={formData.name}\n                    onChange={handleChange}/>\n                  <Form.Text>{formErrors.name}</Form.Text>\n                </Form.Group>\n                \n                <Form.Group>\n                  <Form.Label className='label'>Email</Form.Label>\n                  <Form.Control \n                    id='email'\n                    name='email'\n                    placeholder='email'\n                    type='text'\n                    value={formData.email}\n                    onChange={handleChange}/>\n                  <Form.Text>{formErrors.email}</Form.Text>\n                </Form.Group>\n\n                <Form.Group>\n                  <Form.Label className='label'>Password</Form.Label>\n                  <Form.Control \n                    id='password'\n                    name='password'\n                    placeholder='password'\n                    type='text'\n                    value={formData.password}\n                    onChange={handleChange}/>\n                </Form.Group>\n\n                <Form.Group>\n                  <Form.Label className='label'>Retype New Password</Form.Label>\n                  <Form.Control \n                    id='matchingPassword'\n                    name='matchingPassword'\n                    placeholder='password'\n                    type='text'\n                    value={formData.matchingPassword}\n                    onChange={handleChange}/>\n                  <Form.Text>{formErrors.password}</Form.Text>\n                </Form.Group>\n                <Button className='update-button' type='submit'>Update User Info</Button>\n              </Form>\n            </Row>\n          </Card>\n        </Row>\n      </Container>\n    </div>\n  )\n}\n\nexport default ProfileUpdate","import React from 'react'\nimport { Card } from 'react-bootstrap'\n\nconst Bump = ({referencePoint}) => {\n  const {type, \n    sparker, \n    thought,\n    observation,\n    response,\n    emotions,\n    universal,\n    action,\n    qualities,\n    connection_point} = referencePoint\n\n  const connectionPoint = connection_point\n\n  return (\n    <div>\n          <Card.Title>Detach from the culture bump</Card.Title>\n          <Card.Subtitle>Step 1: Pinpoint The Culture Bump</Card.Subtitle>\n          <Card.Text>\n            I had a {type} culture bump with {sparker} and I thought it was {thought}.\n          </Card.Text>\n\n          <Card.Subtitle>Step 2: Describe What The Other Person(s) Did</Card.Subtitle>\n          <Card.Text>\n            {observation}\n          </Card.Text>\n\n          <Card.Subtitle>Step 3: Describe What You Did</Card.Subtitle>\n          <Card.Text>\n            {response}\n          </Card.Text>\n\n          <Card.Subtitle>Step 4: List The Emotions You Felt When The Bump Happened</Card.Subtitle>\n          <Card.Text>\n            {emotions}\n          </Card.Text>\n\n          <Card.Title>Discover our commonalities</Card.Title>\n          <Card.Subtitle>\n            Step 5: Find The Universal Situation In The Incident When It Happened\n          </Card.Subtitle>\n          <Card.Text>\n            {universal}\n          </Card.Text>\n\n          <Card.Subtitle>\n            Step 6: List And Describe Specific Actions You Would Do In The Universal \n            Situation From Step 5\n        </Card.Subtitle>\n          <Card.Text>\n            {action}\n          </Card.Text>\n\n        <Card.Subtitle>\n            Step 7: List The Qualities That You Feel That Action Demonstrates\n        </Card.Subtitle>\n          <Card.Text>\n            {qualities}\n          </Card.Text>\n\n        <Card.Title>Reconnect beyond the culture bump</Card.Title>\n        <Card.Subtitle>\n          Step 8: Ask or think about how those qualities are demonstrated by other people\n        </Card.Subtitle>\n        <Card.Text>\n          {connectionPoint}\n        </Card.Text>\n\n    </div>\n  )\n}\n\nexport default Bump","import React, {useContext, useEffect, useState} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport BumpCard from '../cards/Bump'\nimport UserContext from '../context/UserConext'\nimport CultureBumpApi from '../api/api'\nimport Loading from '../components/Loading'\nimport { Container, Row, Card, Col, Button, Badge } from 'react-bootstrap'\nimport './Profile.css'\n\nconst Profile = () => {\n  const history = useHistory()\n  const [userReferencePoints, setUserReferencePoints] = useState([])\n  const {currentUser, userTags, setUserTags}  = useContext(UserContext)\n\n  useEffect(function loadUserProfileInfo() {\n    async function getUserInfo() {\n      try {\n        const userReferencePoints = await CultureBumpApi.getUserReferencePoints(username)\n        const userTags = await CultureBumpApi.getUserTags(username)\n\n        setUserReferencePoints(userReferencePoints)\n        setUserTags(userTags)\n      } catch (error) {\n        setUserReferencePoints(null)\n        setUserTags(null)\n      }\n    }\n    getUserInfo()\n  }, [])\n\n  const goToProfileUpdate = event => {\n    history.push(`/users/${username}/update`)\n  }\n\n  const deleteReferencePoint = async (id) => {\n    await CultureBumpApi.deleteReferencePoint(id)\n    const userReferencePoints = await CultureBumpApi.getUserReferencePoints(username)\n    setUserReferencePoints(userReferencePoints)\n  }\n  \n  const createUserReferencePoints = (referencePoint) => {\n    return (\n      <div>\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Card style={{ width: '30rem' }}>\n              <Row>\n                <Col>\n                  <Button variant=\"outline-primary\" size=\"sm\"\n                    onClick={() => {history.push(`/directory/add/${referencePoint.id}`)}}>\n                    Add To Culture Bump Directory\n                  </Button>\n                </Col>\n                <Col>\n                  <Button variant=\"outline-danger\" size=\"sm\" onClick={() => {deleteReferencePoint(referencePoint.id)}}>Delete</Button>\n                </Col>\n              </Row>\n              <Row>\n                <BumpCard referencePoint={referencePoint}/>\n                \n              </Row>\n            </Card>\n          </Row>\n        </Container>\n\n      </div>\n    )\n  }\n\n  if (!userReferencePoints && !userTags && !currentUser) return <Loading/>\n\n  const {username, name, email} = currentUser\n  \n  return (\n    <div>\n      <Container>\n        <Row className=\"justify-content-center\">\n          <Card style={{ width: '30rem' }}>\n            <Card.Title>Hi, {username}</Card.Title>\n            <Card.Subtitle className='info'>name: {name}</Card.Subtitle>\n            <Card.Subtitle className='info'>email: {email}</Card.Subtitle>\n            <Button className='edit-button' variant=\"primary\" size=\"sm\" onClick={goToProfileUpdate}>Edit Profile</Button>\n          \n            <Card.Title className='section-header'>Shared Reference Tags:</Card.Title>\n            <Row>\n              {\n                userTags.length !== 0 ? \n                  userTags.map(tag => <span><Badge size=\"sm\" bg=\"primary\">{tag.tag}</Badge></span>) : \n                  <p>Reference Tags Needed</p>\n              }\n            </Row>\n      \n            <Card.Title className='section-header'>My Culture Bumps:</Card.Title>\n            {\n              userReferencePoints.length !== 0 ? \n                userReferencePoints.map(\n                  referencePoint => createUserReferencePoints(referencePoint)) : \n                  <p>No Culture Bumps Found</p>\n            }\n          </Card>\n        </Row>\n      </Container>\n    </div>\n  )\n}\n\nexport default Profile","import React, {useEffect, useState} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport {Button, Form, Card, Container, Row} from 'react-bootstrap'\n\nconst Login = ({login}) => {\n  const history = useHistory()\n  const [formErrors, setFormErrors] = useState({})\n  const [isSubmitted, setIsSubmitted] = useState(false)\n  const [formData, setFormData] = useState({\n    username: '', \n    password: ''\n  })\n  const {username, password} = formData\n\n  useEffect(() => {\n    async function submitToServer() {\n      if(Object.keys(formErrors).length === 0 && isSubmitted) {\n        const result = await login(formData)\n\n        if (result.sucess) {\n          setFormData(formData => ({...formData, password: ''}))\n          history.push(`/users/${username}`)\n        } else {\n          setFormErrors(formErrors => ({\n            ...formErrors,\n            result: true\n        }))\n        }\n      }\n    }\n    submitToServer()\n  }, [formErrors]) \n\n  const validate = (values) => {\n    const errors = {}\n    const keys = [\n      'username',\n      'password'\n    ]\n\n    for (let i = 0; i < keys.length; i++) {\n      if (!values[keys[i]]) {\n        errors[keys[i]] = \"Required\"\n      }\n    }\n    return errors\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    setFormErrors(validate(formData))\n    setIsSubmitted(true)\n  }\n\n  const handleChange = event => {\n    const {name, value} = event.target\n\n    setFormData(formData => ({\n        ...formData,\n        [name]: value\n    }))\n  }\n\n  return (\n    <div>\n      <Container >\n        <Row className=\"justify-content-center\">\n        <Card className='border d-flex align-items-center justify-content-center' style={{ width: '18rem' }}>\n        <Card.Body>\n          <Card.Title>Log In</Card.Title>\n          <Form onSubmit={handleSubmit}>\n          {formErrors.result ? <Form.Text>Invalid Username or Password</Form.Text> : null}\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control \n                id='username'\n                name='username'\n                placeholder='username'\n                type='text'\n                value={username}\n                onChange={handleChange}/>\n              <Form.Text>{formErrors.username}</Form.Text>   \n\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">   \n            <Form.Label>Password</Form.Label>            \n              <Form.Control \n                id='password'\n                name='password'\n                placeholder='password'\n                type='text'\n                value={password}\n                onChange={handleChange}/>\n              <Form.Text>{formErrors.password}</Form.Text>   \n\n            </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">Login</Button>\n        </Form>\n        </Card.Body>\n      </Card>\n        </Row>\n      </Container>\n    </div>\n  )\n}\n\nexport default Login","import React, {useEffect, useState} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport {Button, Form, Card, Container, Row} from 'react-bootstrap'\n\nconst Signup = ({signup}) => {\n  const history = useHistory()\n  const [formErrors, setFormErrors] = useState({})\n  const [isSubmitted, setIsSubmitted] = useState(false)\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    username: '', \n    password: ''\n  })\n  const {name, username, password, email} = formData\n\n  useEffect(() => {\n    async function submitToServer() {\n      if(Object.keys(formErrors).length === 0 && isSubmitted) {\n\n          const result = await signup(formData)\n\n          if (result.sucess) {\n            setFormData(formData => ({...formData, password: ''}))\n            history.push(`/users/${formData.username}`)\n          } else {\n            setFormErrors(formErrors => ({\n              ...formErrors,\n              result: 'Username or Email already in use'\n            }))\n          }\n      }\n    }\n    submitToServer()\n  }, [formErrors]) \n\n  const validate = (values) => {\n    const errors = {}\n    const regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\n    \n    if (!values.name) {\n      errors.name = \"Required\"\n    } else if (values.name.length <= 2) {\n      errors.name = \"Name value must be more than 2 characters\"\n    }\n\n    if (!values.username) {\n      errors.username = \"Required\"\n    } else if (values.username.length <= 2) {\n      errors.username = \"Username value must be more than 2 characters\"\n    }\n\n    if (!values.email) {\n      errors.email = \"Required\"\n    } else if (!regex.test(values.email)) {\n      errors.email = \"Not a vaild email\"\n    }\n\n    if (!values.password) {\n      errors.password = \"Required\"\n    } else if (values.password.length < 5) {\n      errors.password = \"Password must be more than 5 characters\"\n    } else if (values.password.length >= 20) {\n      errors.password = \"Password must be less than 20 characters\"\n    }\n\n      return errors\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    setFormErrors(validate(formData))\n    setIsSubmitted(true)\n  }\n\n  const handleChange = event => {\n    const {name, value} = event.target\n\n    setFormData(formData => ({\n        ...formData,\n        [name]: value\n    }))\n  }\n\n  return (\n    <div>\n      <Container >\n        <Row className=\"justify-content-center\">\n        <Card className='border d-flex align-items-center justify-content-center' style={{ width: '18rem' }}>\n        <Card.Body>\n          \n          <Card.Title>Sign up</Card.Title>\n          <Form onSubmit={handleSubmit}>\n          <Form.Text>{formErrors.result}</Form.Text>   \n\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control \n                id='name'\n                name='name'\n                placeholder='name'\n                type='text'\n                value={name}\n                onChange={handleChange}/>\n              <Form.Text>{formErrors.name}</Form.Text>   \n\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">   \n            <Form.Label>Username</Form.Label>            \n              <Form.Control \n                id='username'\n                name='username'\n                placeholder='username'\n                type='text'\n                value={username}\n                onChange={handleChange}/>\n              <Form.Text>{formErrors.username}</Form.Text>   \n\n            </Form.Group>\n\n            \n            <Form.Group className=\"mb-3\">   \n            <Form.Label>Email</Form.Label>            \n              <Form.Control \n                id='email'\n                name='email'\n                placeholder='email'\n                type='text'\n                value={email}\n                onChange={handleChange}/>\n              <Form.Text>{formErrors.email}</Form.Text>   \n\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">   \n            <Form.Label>Password</Form.Label>            \n              <Form.Control \n                id='password'\n                name='password'\n                placeholder='password'\n                type='text'\n                value={password}\n                onChange={handleChange}/>\n              <Form.Text>{formErrors.password}</Form.Text>   \n\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">Login</Button>\n          </Form>\n          </Card.Body>\n        </Card>\n        </Row>\n      </Container>\n    </div>\n  )\n}\n\nexport default Signup","import React from 'react'\nimport DirectoryList from '../directory/List'\n\nconst Home = () => {  \n  return (\n    <div>\n      <DirectoryList/>\n    </div>\n  )\n}\n\nexport default Home","import React from 'react'\nimport {Switch, Route, Redirect} from 'react-router-dom'\nimport PrivateRoute from './PrivateRoute'\n\nimport DirectoryAdd from '../directory/Add'\nimport DirectoryList from '../directory/List'\nimport DirectoryDetails from '../directory/Details'\nimport StepsAdd from '../steps/Add'\n\nimport ProfileUpdate from '../profiles/Update'\nimport Profile from '../profiles/Profile'\nimport Login from '../auth/Login'\nimport Signup from '../auth/Signup'\nimport Home from '../home/Home'\n\n\nconst Routes = ({login, signup}) => {\n\n\treturn (\n\t\t<div>\n\t\t\t<Switch>\n\t\t\t\t<Route exact path='/'>\n\t\t\t\t\t<Home />\n\t\t\t\t</Route>\n\n\t\t\t\t<Route exact path='/users/login'>\n\t\t\t\t\t<Login login={login}/>\n\t\t\t\t</Route>\n\n\t\t\t\t<Route exact path='/users/signup'>\n\t\t\t\t\t<Signup signup={signup}/>\n\t\t\t\t</Route>\n\n\t\t\t\t<PrivateRoute exact path='/users/:username'>\n\t\t\t\t\t<Profile foo={'foo'}/>\n\t\t\t\t</PrivateRoute>\n\n\t\t\t\t<PrivateRoute exact path='/users/:username/update'>\n\t\t\t\t\t<ProfileUpdate/>\n\t\t\t\t</PrivateRoute>\n\n\t\t\t\t<Route exact path='/directory'>\n\t\t\t\t\t<DirectoryList/>\n\t\t\t\t</Route>\n\t\t\t\t\n\t\t\t\t<PrivateRoute exact path='/directory/add/:id'>\n\t\t\t\t\t<DirectoryAdd/>\n\t\t\t\t</PrivateRoute>\n\n\t\t\t\t<Route exact path='/directory/:id'>\n\t\t\t\t\t<DirectoryDetails/>\n\t\t\t\t</Route>\n\n\t\t\t\t<PrivateRoute exact path='/steps/add'>\n\t\t\t\t\t<StepsAdd/>\n\t\t\t\t</PrivateRoute>\n\n\t\t\t\t<Redirect to='/'/>\n\t\t\t</Switch>\n\t\t</div>\n\t)\n}\n\nexport default Routes","import React, {useContext} from 'react'\nimport UserContext from '../context/UserConext'\nimport {Navbar, Nav, Container} from 'react-bootstrap'\n\nconst Navigation = ({logout}) => {\n\n  const {currentUser} = useContext(UserContext)\n  const loggedInNav = () => {\n    return (\n      <Navbar bg=\"primary\" variant=\"dark\" expand=\"sm\">\n        <Container>\n          <Navbar.Brand href=\"/\">Culture Bump</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\" activeKey=\"/home\">\n              <Nav.Link href=\"/\">Home</Nav.Link>\n              <Nav.Link href=\"/directory\">Culture Bump Directory</Nav.Link>\n              <Nav.Link href=\"/steps/add\">8 Step Tool</Nav.Link>\n              <Nav.Link href={`/users/${currentUser.username}`}>Profile</Nav.Link>\n\n              <Nav.Link href=\"/\" onClick={logout}>Logout</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    )\n  }\n\n  const loggedOutNav = () => {\n    return (\n      <Navbar bg=\"primary\" variant=\"dark\" expand=\"sm\">\n        <Container>\n          <Navbar.Brand href=\"/\">Culture Bump</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\" activeKey=\"/home\">\n              <Nav.Link href=\"/\">Home</Nav.Link>\n              <Nav.Link href=\"/users/login\">Login</Nav.Link>\n              <Nav.Link href=\"/users/signup\">Signup</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    )\n  }\n\n  return (\n    <nav>\n      {currentUser ? loggedInNav() : loggedOutNav()}\n    </nav>\n  )\n}\n\nexport default Navigation","import {useState, useEffect} from 'react'\n\nconst useLocalStorage = (key, value = null) => {\n  const startingValue = localStorage.getItem(key) || value\n\n  const [item, setItem] = useState(startingValue)\n\n  useEffect(function setInLocalStorage() {\n    if (item === null) {\n      localStorage.removeItem(key)\n    } else {\n      localStorage.setItem(key, item)\n    }\n  }, [key, item])\n\n  return [item, setItem]\n}\n\nexport default useLocalStorage","import React, {useState, useEffect} from 'react'\nimport {BrowserRouter} from 'react-router-dom'\nimport jwt from 'jsonwebtoken'\n\nimport Routes from './nav/Routes'\nimport CultureBumpApi from './api/api'\nimport UserContext from './context/UserConext'\nimport Navigation from './nav/Nav'\nimport useLocalStorage from './hooks/useLocalStorage'\nimport Loading from './components/Loading'\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nexport const TOKEN_IN_STORAGE = \"Storage-Token\"\n\nfunction App() {\n  const [infoLoaded, setInfoLoaded] = useState(false)\n  const [currentUser, setCurrentUser] = useState('')\n  const [token, setToken] = useLocalStorage(TOKEN_IN_STORAGE)\n  const [userTags, setUserTags] = useState([])\n\n  useEffect(function loadUserInfo() {\n    async function getCurrentUser() {\n      if (token) {\n        try {\n          const {username} = jwt.decode(token)\n\n          CultureBumpApi.token = token\n\n          const currentUser = await CultureBumpApi.getCurrentUser(username)\n\n          setCurrentUser(currentUser)\n        } catch (err) {\n          setCurrentUser(null)\n        }\n      }\n      setInfoLoaded(true)\n    }\n    setInfoLoaded(false)\n    getCurrentUser()\n  }, [token])\n\n  const logout = () => {\n    setCurrentUser(null)\n    setToken(null)\n  }\n\n  async function login(loginData) {\n    try {\n      const token = await CultureBumpApi.login(loginData) \n      setToken(token)\n      return {sucess: true}\n    } catch (err) {\n      return {success: false, err}\n    }\n  }\n\n  async function signup(signupData) {\n    try {\n      const token = await CultureBumpApi.signup(signupData)\n      setToken(token)\n      return {sucess: true}\n    } catch (err) {\n      return {sucess : false, err}\n    }\n  }\n\n  if (!infoLoaded) return <Loading/>\n\n  return (\n    <BrowserRouter>\n      <UserContext.Provider value={{\n        currentUser, \n        setCurrentUser,\n        userTags, \n        setUserTags\n      }}>\n        <div>\n          <Navigation logout={logout}/>\n          <Routes login={login} signup={signup} />\n        </div>\n      </UserContext.Provider>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}